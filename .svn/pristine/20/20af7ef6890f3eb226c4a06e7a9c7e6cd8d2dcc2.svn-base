package edu.wm.cs.cs301.amazebyeyosyas.ui;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.CompoundButton;
import android.widget.Toast;
import android.widget.ToggleButton;

import edu.wm.cs.cs301.amazebyeyosyas.R;

public class PlayActivity extends AppCompatActivity {

    public String tag = "PlayActivity"; 

    /**
     * Perform initialization of all fragments and loaders.
     * @param savedInstanceState - If the activity is being re-initialized after previously being shut down then this Bundle contains the data it most recently supplied in onSaveInstanceState.
     */
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        Intent driverIntent = getIntent();
        String driver = "";
        if (driverIntent != null) {
            driver = driverIntent.getStringExtra("driver_selected");
        }
        if (driver.equals("Manual")) {
            setContentView(R.layout.activity_play_manual);
        } else {
            setContentView(R.layout.activity_play_robot);
        }

        Button successButton = (Button) findViewById(R.id.success_button);
        successButton.setOnClickListener(new View.OnClickListener() {

            /**
             * Changes activity from PlayActivity to FinishActivity when successButton is clicked.
             * @param v - the view that was clicked.
             */
            @Override
            public void onClick(View v) {
                String toastStr = "Success Button Pressed";
                Toast.makeText(getApplicationContext(), toastStr, Toast.LENGTH_SHORT).show();
                Intent successIntent = new Intent(PlayActivity.this, FinishActivity.class);
                successIntent.putExtra("button_clicked", "success_button");
                startActivity(successIntent);
            }
        });

        Button failureButton = (Button) findViewById(R.id.failure_button);
        failureButton.setOnClickListener(new View.OnClickListener() {

            /**
             * Changes activity from PlayActivity to FinishActivity when failureButton is clicked.
             * @param v - the view that was clicked.
             */
            @Override
            public void onClick(View v) {
                String toastStr = "Failure Button Pressed";
                Toast.makeText(getApplicationContext(), toastStr, Toast.LENGTH_SHORT).show();
                Intent failureIntent = new Intent(PlayActivity.this, FinishActivity.class);
                failureIntent.putExtra("button_clicked", "failure_button");
                startActivity(failureIntent);
            }
        });

        // Toast for Show/Hide Map ToggleButton
        ToggleButton mapToggleButton = (ToggleButton) findViewById(R.id.map_toggleButton);
        mapToggleButton.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            /**
             * Called when map_toggleButton is clicked. Used to create Toast.
             * @param buttonView - The compound button view whose state has changed.
             * @param isChecked - The new checked state of buttonView.
             */
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (isChecked) {
                    String toastStr = "Show Map Toggle Button Pressed";
                    Toast.makeText(getApplicationContext(), toastStr, Toast.LENGTH_SHORT).show();
                } else {
                    String toastStr = "Hide Map Toggle Button Pressed";
                    Toast.makeText(getApplicationContext(), toastStr, Toast.LENGTH_SHORT).show();
                }
            }
        });

        // Toast for Show/Hide Solution ToggleButton
        ToggleButton solutionToggleButton = (ToggleButton) findViewById(R.id.solution_toggleButton);
        solutionToggleButton.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            /**
             * Called when solution_toggleButton is clicked. Used to create Toast.
             * @param buttonView - The compound button view whose state has changed.
             * @param isChecked - The new checked state of buttonView.
             */
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (isChecked) {
                    String toastStr = "Show Solution Toggle Button Pressed";
                    Toast.makeText(getApplicationContext(), toastStr, Toast.LENGTH_SHORT).show();
                } else {
                    String toastStr = "Hide Solution Toggle Button Pressed";
                    Toast.makeText(getApplicationContext(), toastStr, Toast.LENGTH_SHORT).show();
                }
            }
        });

        // Toast for Show/Hide Walls ToggleButton
        ToggleButton wallsToggleButton = (ToggleButton) findViewById(R.id.walls_toggleButton);
        wallsToggleButton.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            /**
             * Called when walls_toggleButton is clicked. Used to create Toast.
             * @param buttonView - The compound button view whose state has changed.
             * @param isChecked - The new checked state of buttonView.
             */
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (isChecked) {
                    String toastStr = "Show Walls Toggle Button Pressed";
                    Toast.makeText(getApplicationContext(), toastStr, Toast.LENGTH_SHORT).show();
                } else {
                    String toastStr = "Hide Walls Toggle Button Pressed";
                    Toast.makeText(getApplicationContext(), toastStr, Toast.LENGTH_SHORT).show();
                }
            }
        });

        //Toast for Navigation Buttons
        if (driver.equals("Manual")) {
            Button upButton = (Button) findViewById(R.id.up_button);
            Button downButton = (Button) findViewById(R.id.down_button);
            Button leftButton = (Button) findViewById(R.id.left_button);
            Button rightButton = (Button) findViewById(R.id.right_button);

            upButton.setOnClickListener(new View.OnClickListener() {
                /**
                 * CCalled when upButton is clicked. Used to create Toast.
                 * @param v - the view that was clicked.
                 */
                @Override
                public void onClick(View v) {
                    String toastStr = "Up Button Pressed";
                    Toast.makeText(getApplicationContext(), toastStr, Toast.LENGTH_SHORT).show();
                }
            });
            downButton.setOnClickListener(new View.OnClickListener() {
                /**
                 * CCalled when downButton is clicked. Used to create Toast.
                 * @param v - the view that was clicked.
                 */
                @Override
                public void onClick(View v) {
                    String toastStr = "Down Button Pressed";
                    Toast.makeText(getApplicationContext(), toastStr, Toast.LENGTH_SHORT).show();
                }
            });
            leftButton.setOnClickListener(new View.OnClickListener() {
                /**
                 * CCalled when leftButton is clicked. Used to create Toast.
                 * @param v - the view that was clicked.
                 */
                @Override
                public void onClick(View v) {
                    String toastStr = "Left Button Pressed";
                    Toast.makeText(getApplicationContext(), toastStr, Toast.LENGTH_SHORT).show();
                }
            });
            rightButton.setOnClickListener(new View.OnClickListener() {
                /**
                 * CCalled when rightButton is clicked. Used to create Toast.
                 * @param v - the view that was clicked.
                 */
                @Override
                public void onClick(View v) {
                    String toastStr = "Right Button Pressed";
                    Toast.makeText(getApplicationContext(), toastStr, Toast.LENGTH_SHORT).show();
                }
            });
        }

        // Toast for Pause/Start ToggleButton
        if (!driver.equals("Manual")) {
            ToggleButton pauseStartToggleButton = (ToggleButton) findViewById(R.id.pause_start_toggleButton);
            pauseStartToggleButton.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                /**
                 * Called when pause_start_toggleButton is clicked. Used to create Toast.
                 * @param buttonView - The compound button view whose state has changed.
                 * @param isChecked - The new checked state of buttonView.
                 */
                @Override
                public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                    if (isChecked) {
                        String toastStr = "Pause Toggle Button Pressed";
                        Toast.makeText(getApplicationContext(), toastStr, Toast.LENGTH_SHORT).show();
                    } else {
                        String toastStr = "Start Toggle Button Pressed";
                        Toast.makeText(getApplicationContext(), toastStr, Toast.LENGTH_SHORT).show();
                    }
                }
            });
        }

    }

    /**
     * Overrides the back button so when clicked, the app goes to AMazeActivity
     */
    @Override
    public void onBackPressed() {
        String toastStr = "Back Button Pressed";
        Toast.makeText(getApplicationContext(), toastStr, Toast.LENGTH_SHORT).show();
        Intent backToTitle = new Intent(PlayActivity.this, AMazeActivity.class);
        startActivity(backToTitle);
    }

}
